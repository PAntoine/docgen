supported features:

1. emp text
2. header levels
3. underlining
#4. tables			(pain in the arse do later)
5. urls

(note: *,_ both are emp start)

state machine:
looking:
' ' -> found_space
'\n' -: line_start = current_pos, dump_data excluding the '\n', move on, -> looking
'#' (if current_pos == line_start) -> header_start
'\'' -> pos_code_start
'>' (if current_pos == line_start) -> code_section

pos_code_start:
'\'' -: output(code_start) -> found_code
<ant other> ->looking

code_start:
'\'' -> pos_code_end
<any other> -> code_start

pos_code_end:
'\'' -: dump data excluding '\'', output(code_end) -> looking
<any other> -> code_start

found_space:
' ' -: dump data to current location -> found_spaces
'*' -> pos_emp_start

found_spaces:
' ' -> found_spaces
'\n' -: output(new_line) -> looking

pos_emp_start:
'*' -: emp_level++ -> pos_emp_start
<non-white>-: output(emp_start) -> in_emp
<white> -> looking

in_emp:
' ' -> space_in_emp
'*' -> pos_end_emp

space_in_emp:
' ' -> space_in_emp
<any> -> in_emp

pos_end_emp:
'*' -> pos_end_emp
' ' -: output(output current data) + outout(emp_end) current_state = end_emp -> looking

header_count:
'#' -: header_level_count++ -> header_start
<anything else> -: output(header_count) -> header

header:
'#' -: dump current data, output(header_end) -> header_end
'\n' -: dump current data, output(header_end) -> looking
<anything else> -> header

header_end:
'#' -> header_end
<anything else> -> looking

code_section:
'\n' -: dump current data, excluding \n -> looking
<any thing else> -> code_section


