#*--------------------------------------------------------------------------------
#				Document Generator Project
#					by Peter Antoine
#
#	@file: make_docs
#	@desc: This makefile will build the documents for the files.
#
#	 NOTE: this should not be done this way in a normal build. As I can't know
#	       that the pdsc file has been compiled, I cant call it on files that are
#	       used to build it. So the document build has to be called after the
#	       main build. Hence this is a stand alone target.
#
#	       This is also a nasty recursive makefile. This is done as the only way
#	       to get the dependencies of the target is to overload the "docs" target
#	       generated by the dependency function (also a nasty recursive makefile).
#
#	       Also, this is also assuming that not every .pdso file in the "object"
#	       directory is required for the link, else this code would just be a 
#	       simple search.
#
# @author: pantoine
#	@date: 04/07/2012 21:00:37
#---------------------------------------------------------------------------------
#					  Copyright (c) 2012 Peter Antoine
#							 All rights Reserved.
#					 Released Under the Artistic Licence
#---------------------------------------------------------------------------------

TARGET_NAME			= $(lastword $(subst /, ,$(CURDIR)))
DOCS_OBJECT			= $(BUILD_ROOT)/output/$(TARGET_NAME).gout

DOC_FILES			= $(wildcard source/*.md)

C_SOURCE_FILES		= $(wildcard source/*.c)
CPP_SOURCE_FILES	= $(wildcard source/*.cpp)

PDSO_FILES			= $(addsuffix .pdso,$(subst /include,/object,$(subst /source,/object,$(filter-out make_$(TARGET_NAME).deps,$(DOC_SOURCE_FILES)))))
DOC_DEPENDENCES		= $(addprefix docs_,$(DEPENDENCES))

#---------------------------------------------------------------------------------
# Generic build targets
#---------------------------------------------------------------------------------
.PHONY: docs sub_make $(DOC_DEPENDENCES) 

binary_release: docs
source_release: docs
dry_run_release: docs
docs: $(DOC_DEPENDENCES) make_$(TARGET_NAME).deps docs_srcs $(BUILD_ROOT)/docs

# object has to be build in the recursive call else the dependency is empty
docs_srcs:  
	$(MAKE) $(DOCS_OBJECT) DOC_SOURCE_FILES="$^"

$(BUILD_ROOT)/docs: $(DOCS_OBJECT) $(DOC_SOURCES)
	@$(DEBUG_FUNC) pdp -f text,html,manpage  -d $(BUILD_ROOT)/output -o $(BUILD_ROOT)/docs -i$(DOCS_OBJECT) $(DOC_FILES)

clean_docs:
	-@$(RMSUBDIR) object
	-@$(RM_F) $(DOCS_OBJECT)

#---------------------------------------------------------------------------------
# Local build targets
#---------------------------------------------------------------------------------
$(DOC_DEPENDENCES):
	-$(MAKE) -C $(BUILD_ROOT)/$(subst docs_,,$@) docs

$(DOCS_OBJECT): $(PDSO_FILES)
	@echo Linking $(TARGET_NAME) Documents...
	@$(DEBUG_FUNC) pdsl $(PDSO_FILES) -o $@

$(CURDIR)/object/%.h.pdso : $(CURDIR)/include/%.h
	@$(DEBUG_FUNC) pdsc -o $@ $<

$(CURDIR)/object/%.c.pdso : $(CURDIR)/source/%.c
	@$(DEBUG_FUNC) pdsc -o $@ $<

